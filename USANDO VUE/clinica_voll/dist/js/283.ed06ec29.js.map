{"version":3,"file":"js/283.ed06ec29.js","mappings":"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","sources":["webpack://clinica_voll/./src/components/page/login/helper/homeService.ts","webpack://clinica_voll/./src/components/page/home/consultas/CancelarConsultaModal.vue?8874","webpack://clinica_voll/./src/components/page/home/consultas/CancelarConsultaModal.vue","webpack://clinica_voll/./src/components/page/home/consultas/CancelarConsultaModal.vue?a7e4","webpack://clinica_voll/./src/components/page/home/consultas/EditConsultaModal.vue?a3cf","webpack://clinica_voll/./src/components/page/home/consultas/EditConsultaModal.vue","webpack://clinica_voll/./src/components/page/home/consultas/EditConsultaModal.vue?91d3","webpack://clinica_voll/./src/views/ConsultasView.vue?5ebd","webpack://clinica_voll/./src/views/ConsultasView.vue","webpack://clinica_voll/./src/views/ConsultasView.vue?7281"],"sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nimport type { Medico } from '../interfaces/Medico';\r\n\r\n// const API_URL = 'http://localhost:8080/';\r\nconst API_URL = '/api/';\r\nclass HomeService {\r\n    async getMedicosBoard() {\r\n        return await axios.get(API_URL + 'medicos', { headers: authHeader() });\r\n    }\r\n\r\n    async getPacientesBoard() {\r\n        return await axios.get(API_URL + 'pacientes', { headers: authHeader() });\r\n    }\r\n\r\n    async getConsultasBoard() {\r\n        return await axios.get(API_URL + 'consultas', { headers: authHeader() });\r\n    }\r\n    // async createMedico(medico: Medico) {\r\n    //     return await axios.post(API_URL + `medicos/registrar`, { medico }, { headers: authHeader() });\r\n    // }\r\n}\r\n\r\nexport default new HomeService();\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, unref as _unref, vModelSelect as _vModelSelect, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-724c5531\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"min-h-screen flex items-center justify-center bg-zinc-100 dark:bg-zinc-900\" }\nconst _hoisted_2 = { class: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\" }\nconst _hoisted_3 = { class: \"bg-white dark:bg-card p-6 rounded-lg shadow-lg max-w-sm w-full\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", { class: \"text-lg font-semibold text-center text-blue-900\" }, \"Desea cancelar esta consulta?\", -1))\nconst _hoisted_5 = { class: \"mt-4 p-4 bg-zinc-100 dark:bg-muted rounded-lg\" }\nconst _hoisted_6 = { class: \"text-sm font-medium text-zinc-700 dark:text-foreground\" }\nconst _hoisted_7 = { class: \"block font-semibold text-blue-600\" }\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_9 = { class: \"text-zinc-500 dark:text-muted-foreground\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-zinc-500 dark:text-muted-foreground\" }, \"Paciente\", -1))\nconst _hoisted_13 = { class: \"mt-5 form-group\" }\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\",\n  selected: \"\",\n  hidden: \"\"\n}, null, -1))\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", null, \"PACIENTE_DESISTIO\", -1))\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", null, \"MEDICO_CANCELO\", -1))\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", null, \"OTROS\", -1))\nconst _hoisted_18 = [\n  _hoisted_14,\n  _hoisted_15,\n  _hoisted_16,\n  _hoisted_17\n]\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  id: \"reason\",\n  class: \"block text-sm font-medium text-gray-700 form-label\"\n}, \"Motivo del Cancelamiento\", -1))\nconst _hoisted_20 = {\n  key: 0,\n  class: \"flex font-sans text-sm text-red-600\"\n}\nconst _hoisted_21 = { class: \"mt-6 flex justify-between\" }\n\nimport { reactive, onMounted, ref } from 'vue';\r\nimport { Consulta } from '../../login/interfaces/Consulta';\r\nimport { format } from 'date-fns';\r\nimport { required } from '@vuelidate/validators';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport ConsultaService from '../../login/helper/ConsultaService';\r\nimport Swal from 'sweetalert2';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'CancelarConsultaModal',\n  props: {\n    consulta: {}\n  },\n  emits: ['consultaCancelled', 'close'],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst infoConsulta = reactive<Consulta>({ ...props.consulta });\r\nconst motivo = ref('');\r\nconst rules = {\r\n    motivo: { required },\r\n};\r\nconst v$ = useVuelidate(rules, { motivo });\r\nconst hora = ref('');\r\n// Al montar el componente, separamos la fecha y la hora\r\nonMounted(() => {\r\n    if (infoConsulta.fecha) {\r\n        const date = new Date(infoConsulta.fecha);\r\n        infoConsulta.fecha = format(date, 'yyyy-MM-dd');\r\n        hora.value = format(date, 'HH:mm');\r\n    }\r\n});\r\n\r\nconst emit = __emit;\r\n\r\nasync function cancelar(consulta: Consulta, motivo: any) {\r\n    const isValid = await v$.value.$validate();\r\n    if (!isValid) {\r\n        // Formulario no válido, muestra errores\r\n        return;\r\n    }\r\n    try {\r\n        const response = await ConsultaService.cancelarConsulta(consulta, motivo);\r\n        console.log('recibido: ', response.data);\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: response.data.body,\r\n        });\r\n        emit('consultaCancelled', consulta);\r\n        emit('close');\r\n    } catch (error) {\r\n        console.error('error', error);\r\n    }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _hoisted_4,\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"p\", _hoisted_6, [\n            _createElementVNode(\"span\", _hoisted_7, _toDisplayString(infoConsulta.fecha) + \" a las \" + _toDisplayString(hora.value), 1),\n            _createTextVNode(\" \" + _toDisplayString(infoConsulta.nombreMedico), 1),\n            _hoisted_8,\n            _createElementVNode(\"span\", _hoisted_9, _toDisplayString(infoConsulta.especialidadMedico) + \" | Documento \" + _toDisplayString(infoConsulta.documentoMedico), 1),\n            _hoisted_10,\n            _createTextVNode(\" \" + _toDisplayString(infoConsulta.nombrePaciente), 1),\n            _hoisted_11,\n            _hoisted_12\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_13, [\n          _withDirectives(_createElementVNode(\"select\", {\n            class: _normalizeClass([{ 'border-red-500': _unref(v$).motivo.$error }, \"mt-1 block w-full p-2 border border-zinc-300 dark:border-muted rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"]),\n            for: \"reason\",\n            required: \"\",\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((motivo).value = $event))\n          }, _hoisted_18, 2), [\n            [_vModelSelect, motivo.value]\n          ]),\n          _hoisted_19,\n          (_unref(v$).motivo.$error)\n            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_20, \"Este campo es obligatorio\"))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"div\", _hoisted_21, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (cancelar(infoConsulta, motivo.value))),\n            class: \"bg-[#072b52] border border-[#072b52] text-primary-foreground active:border active:text-[#072b52] active:bg-white hover:bg-blue-900 px-4 py-2 rounded-lg\"\n          }, \" Confirmar cancelamiento \"),\n          _createElementVNode(\"button\", {\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (_ctx.$emit('close'))),\n            class: \"border border-primary active:bg-[#072b52] active:text-white text-[#072b52] hover:bg-primary/10 px-4 py-2 rounded-lg\"\n          }, \" Volver \")\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"min-h-screen flex items-center justify-center bg-zinc-100 dark:bg-zinc-900\">\r\n        <div class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n            <div class=\"bg-white dark:bg-card p-6 rounded-lg shadow-lg max-w-sm w-full\">\r\n                <h2 class=\"text-lg font-semibold text-center text-blue-900\">Desea cancelar esta consulta?</h2>\r\n                <div class=\"mt-4 p-4 bg-zinc-100 dark:bg-muted rounded-lg\">\r\n                    <p class=\"text-sm font-medium text-zinc-700 dark:text-foreground\">\r\n                        <span class=\"block font-semibold text-blue-600\">{{ infoConsulta.fecha }} a las {{ hora }}</span>\r\n                        {{ infoConsulta.nombreMedico }}<br />\r\n                        <span class=\"text-zinc-500 dark:text-muted-foreground\"\r\n                            >{{ infoConsulta.especialidadMedico }} | Documento {{ infoConsulta.documentoMedico }}</span\r\n                        ><br />\r\n                        {{ infoConsulta.nombrePaciente }}<br />\r\n                        <span class=\"text-zinc-500 dark:text-muted-foreground\">Paciente</span>\r\n                    </p>\r\n                </div>\r\n                <!-- <label class=\"block text-sm font-medium text-zinc-700 dark:text-foreground\">Seleccione abajo el motivo de la cancelacion:</label> -->\r\n                <div class=\"mt-5 form-group\">\r\n                    <select\r\n                        :class=\"{ 'border-red-500': v$.motivo.$error }\"\r\n                        for=\"reason\"\r\n                        required\r\n                        v-model=\"motivo\"\r\n                        class=\"mt-1 block w-full p-2 border border-zinc-300 dark:border-muted rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n                    >\r\n                        <option value=\"\" disabled selected hidden></option>\r\n                        <option>PACIENTE_DESISTIO</option>\r\n                        <option>MEDICO_CANCELO</option>\r\n                        <option>OTROS</option>\r\n                    </select>\r\n                    <label id=\"reason\" class=\"block text-sm font-medium text-gray-700 form-label\">Motivo del Cancelamiento</label>\r\n                    <span v-if=\"v$.motivo.$error\" class=\"flex font-sans text-sm text-red-600\">Este campo es obligatorio</span>\r\n                </div>\r\n                <div class=\"mt-6 flex justify-between\">\r\n                    <button\r\n                        @click=\"cancelar(infoConsulta, motivo)\"\r\n                        class=\"bg-[#072b52] border border-[#072b52] text-primary-foreground active:border active:text-[#072b52] active:bg-white hover:bg-blue-900 px-4 py-2 rounded-lg\"\r\n                    >\r\n                        Confirmar cancelamiento\r\n                    </button>\r\n                    <button\r\n                        @click=\"$emit('close')\"\r\n                        class=\"border border-primary active:bg-[#072b52] active:text-white text-[#072b52] hover:bg-primary/10 px-4 py-2 rounded-lg\"\r\n                    >\r\n                        Volver\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { reactive, defineProps, defineEmits, onMounted, ref } from 'vue';\r\nimport { Consulta } from '../../login/interfaces/Consulta';\r\nimport { format } from 'date-fns';\r\nimport { required } from '@vuelidate/validators';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport ConsultaService from '../../login/helper/ConsultaService';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst props = defineProps<{\r\n    consulta: Consulta;\r\n}>();\r\nconst infoConsulta = reactive<Consulta>({ ...props.consulta });\r\nconst motivo = ref('');\r\nconst rules = {\r\n    motivo: { required },\r\n};\r\nconst v$ = useVuelidate(rules, { motivo });\r\nconst hora = ref('');\r\n// Al montar el componente, separamos la fecha y la hora\r\nonMounted(() => {\r\n    if (infoConsulta.fecha) {\r\n        const date = new Date(infoConsulta.fecha);\r\n        infoConsulta.fecha = format(date, 'yyyy-MM-dd');\r\n        hora.value = format(date, 'HH:mm');\r\n    }\r\n});\r\n\r\nconst emit = defineEmits(['consultaCancelled', 'close']);\r\n\r\nasync function cancelar(consulta: Consulta, motivo: any) {\r\n    const isValid = await v$.value.$validate();\r\n    if (!isValid) {\r\n        // Formulario no válido, muestra errores\r\n        return;\r\n    }\r\n    try {\r\n        const response = await ConsultaService.cancelarConsulta(consulta, motivo);\r\n        console.log('recibido: ', response.data);\r\n        Swal.fire({\r\n            icon: 'success',\r\n            title: response.data.body,\r\n        });\r\n        emit('consultaCancelled', consulta);\r\n        emit('close');\r\n    } catch (error) {\r\n        console.error('error', error);\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-input:focus + .form-label,\r\n.form-input:not(:placeholder-shown) + .form-label {\r\n    transform: translateY(-12px) scale(0.7);\r\n    transform-origin: left top;\r\n    color: hsl(var(--muted-foreground));\r\n}\r\n\r\n.form-label {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 15px;\r\n    transition:\r\n        transform 0.5s,\r\n        color 0.3s;\r\n}\r\n\r\n.form-label-date {\r\n    position: absolute;\r\n    top: -2px;\r\n    left: 2px;\r\n    font-size: 60%;\r\n    color: hsl(var(--muted-foreground));\r\n}\r\n\r\n.form-group {\r\n    position: relative;\r\n    display: grid;\r\n    /* gap: 20px;*/\r\n}\r\n\r\n.form-group select:focus-within + .form-label,\r\n.form-group select:valid + .form-label {\r\n    transform: translateY(-60%) scale(0.7);\r\n\r\n    transform-origin: left top;\r\n    color: hsl(var(--muted-foreground));\r\n}\r\n</style>\r\n","import script from \"./CancelarConsultaModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./CancelarConsultaModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./CancelarConsultaModal.vue?vue&type=style&index=0&id=724c5531&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-724c5531\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, unref as _unref, vModelText as _vModelText, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-5d21bcf7\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  id: \"modal\",\n  class: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\"\n}\nconst _hoisted_2 = { class: \"bg-card p-5 rounded-lg w-full max-w-lg\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", { class: \"flex items-center justify-center rounded p-4 bg-blue-900 text-white\" }, [\n  /*#__PURE__*/_createElementVNode(\"h1\", { class: \"text-lg font-semibold\" }, \"Editar\")\n], -1))\nconst _hoisted_4 = { class: \"flex flex-col flex-1 space-y-6\" }\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", { class: \"text-lg font-semibold text-[#003366] mt-5\" }, \"Participantes\", -1))\nconst _hoisted_6 = { class: \"space-y-4\" }\nconst _hoisted_7 = { class: \"space-y-2 form-group\" }\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"patient-name\",\n  class: \"block text-sm font-medium text-gray-700 form-label\"\n}, \"Nombre del paciente\", -1))\nconst _hoisted_10 = { class: \"space-y-2 form-group\" }\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"doctor-name\",\n  class: \"block text-sm font-medium text-gray-700 form-label\"\n}, \"Nombre del médico\", -1))\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", { class: \"text-lg font-semibold text-[#003366]\" }, \"Fecha y horario\", -1))\nconst _hoisted_14 = { class: \"space-y-4\" }\nconst _hoisted_15 = { class: \"relative mt-0 form-group\" }\nconst _hoisted_16 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"appointment-date\",\n  class: \"block text-sm font-medium text-gray-700 pl-3 form-label-date\"\n}, \"Fecha de la consulta\", -1))\nconst _hoisted_17 = {\n  key: 0,\n  class: \"flex m-0 p-0 font-sans text-sm text-red-600\"\n}\nconst _hoisted_18 = { class: \"space-y-2 form-group\" }\nconst _hoisted_19 = [\"value\"]\nconst _hoisted_20 = [\"value\"]\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"appointment-time\",\n  class: \"block text-sm font-medium text-gray-700 form-label\"\n}, \"Horario de la consulta\", -1))\nconst _hoisted_22 = { class: \"flex flex-col space-y-4\" }\n\nimport { reactive, ref, onMounted, computed, watch } from 'vue';\r\nimport { Consulta } from '../../login/interfaces/Consulta';\r\nimport ConsultaService from '../../login/helper/ConsultaService';\r\nimport { Medico } from '../../login/interfaces/Medico';\r\nimport { Paciente } from '../../login/interfaces/Paciente';\r\nimport { format } from 'date-fns';\r\nimport { fromZonedTime } from 'date-fns-tz';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'EditConsultaModal',\n  props: {\n    consulta: {},\n    medicos: {},\n    pacientes: {}\n  },\n  emits: ['consultaEdited', 'close'],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst infoConsulta = reactive<Consulta>({ ...props.consulta });\r\nconst appointmentTime = ref('');\r\nconst horas = ['07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00'];\r\n\r\n// Al montar el componente, separamos la fecha y la hora\r\nonMounted(() => {\r\n    if (infoConsulta.fecha) {\r\n        const date = new Date(infoConsulta.fecha);\r\n        infoConsulta.fecha = format(date, 'yyyy-MM-dd');\r\n        appointmentTime.value = format(date, 'HH:mm');\r\n    }\r\n});\r\nconst rules = {\r\n    infoConsulta: {\r\n        fecha: { required },\r\n    },\r\n};\r\nconst v$ = useVuelidate(rules, { infoConsulta });\r\n\r\n// onMounted(() => {\r\n//     if (!infoConsulta.fecha) {\r\n//         infoConsulta.fecha = new Date().toISOString(); // O usa null si prefieres\r\n//     }\r\n//     // Extraer la hora de la fecha\r\n//     const date = new Date(infoConsulta.fecha);\r\n//     if (!isNaN(date.getTime())) {\r\n//         appointmentTime.value = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n//     } else {\r\n//         console.error('Invalid date value in onMounted:', infoConsulta.fecha);\r\n//     }\r\n// });\r\n\r\nconst emit = __emit;\r\n\r\nasync function handleSubmit(consulta: Consulta) {\r\n    const isValid = await v$.value.$validate();\r\n    if (!isValid) {\r\n        // Formulario no válido, muestra errores\r\n        return;\r\n    }\r\n    if (consulta.fecha && appointmentTime.value) {\r\n        try {\r\n            // Combinar fecha y hora en el formato correcto\r\n            const dateTime = new Date(`${consulta.fecha}T${appointmentTime.value}:00`);\r\n            const utcDateTime = fromZonedTime(dateTime, 'America/Mexico_City'); // Ajusta la zona horaria según tu ubicación\r\n            consulta.fecha = format(utcDateTime, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\r\n            // if (!infoConsulta.fecha || isNaN(new Date(infoConsulta.fecha).getTime())) {\r\n            //     console.error('Fecha no válida:', infoConsulta.fecha);\r\n            //     return;\r\n            // }\r\n\r\n            const response = await ConsultaService.editConsulta(consulta);\r\n\r\n            if (response.status == 200) {\r\n                Swal.fire({\r\n                    title: 'Edicion exitoso!',\r\n                    text: 'Se ha actualizado la Informacion',\r\n                    icon: 'success',\r\n                    confirmButtonText: 'Ok',\r\n                });\r\n            }\r\n            const editConsulta: Consulta = response.data.body;\r\n            emit('consultaEdited', editConsulta);\r\n            emit('close');\r\n        } catch (e) {\r\n            console.error('error', e);\r\n            if (axios.isAxiosError(e)) {\r\n                if (!e.response) {\r\n                    Swal.fire({\r\n                        title: 'Error!',\r\n                        text: 'Ha ocurrido un error desconocido',\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Ok',\r\n                    });\r\n                } else if (e.response.status === 409) {\r\n                    Swal.fire({\r\n                        title: 'Error!',\r\n                        text: e.response?.data[0].error,\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Ok',\r\n                    });\r\n                } else if (e.response.status === 400) {\r\n                    Swal.fire({\r\n                        title: 'Error!',\r\n                        text: e.response?.data,\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Ok',\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// const formattedDate = computed({\r\n//     get: () => {\r\n//         const date = new Date(infoConsulta.fecha);\r\n//         if (isNaN(date.getTime())) {\r\n//             return ''; // Retorna una cadena vacía si la fecha no es válida\r\n//         }\r\n//         return date.toISOString().split('T')[0];\r\n//     },\r\n//     set: (newValue: string) => {\r\n//         if (newValue === '') {\r\n//             infoConsulta.fecha == null; // O establece un valor por defecto\r\n//             return;\r\n//         }\r\n//         const [year, month, day] = newValue.split('-');\r\n//         const oldDate = new Date(infoConsulta.fecha || new Date()); // Usa la fecha actual si es null\r\n//         const newDate = new Date(Number(year), Number(month) - 1, Number(day), oldDate.getHours(), oldDate.getMinutes());\r\n//         infoConsulta.fecha = newDate.toISOString();\r\n//     },\r\n// });\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _hoisted_3,\n      _createElementVNode(\"main\", _hoisted_4, [\n        _createElementVNode(\"section\", null, [\n          _hoisted_5,\n          _createElementVNode(\"div\", _hoisted_6, [\n            _createElementVNode(\"div\", _hoisted_7, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((infoConsulta.nombrePaciente) = $event)),\n                required: \"\",\n                id: \"patient-name\",\n                class: \"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.pacientes, (paciente) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: paciente.id,\n                    value: paciente.nombre\n                  }, _toDisplayString(paciente.nombre), 9, _hoisted_8))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, infoConsulta.nombrePaciente]\n              ]),\n              _hoisted_9\n            ]),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((infoConsulta.nombreMedico) = $event)),\n                id: \"doctor-name\",\n                class: \"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.medicos, (medico) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: medico.id,\n                    value: medico.nombre\n                  }, _toDisplayString(medico.nombre), 9, _hoisted_11))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, infoConsulta.nombreMedico]\n              ]),\n              _hoisted_12\n            ])\n          ])\n        ]),\n        _createElementVNode(\"section\", null, [\n          _hoisted_13,\n          _createElementVNode(\"div\", _hoisted_14, [\n            _createElementVNode(\"div\", null, [\n              _createElementVNode(\"div\", _hoisted_15, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((infoConsulta.fecha) = $event)),\n                  type: \"date\",\n                  id: \"appointment-date\",\n                  class: _normalizeClass([\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\", { 'border-red-500': _unref(v$).infoConsulta.fecha.$error }])\n                }, null, 2), [\n                  [_vModelText, infoConsulta.fecha]\n                ]),\n                _hoisted_16,\n                (_unref(v$).infoConsulta.fecha.$error)\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, \"Este campo es requerido\"))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_18, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((appointmentTime).value = $event)),\n                id: \"appointment-time\",\n                class: \"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n              }, [\n                _createElementVNode(\"option\", { value: appointmentTime.value }, _toDisplayString(appointmentTime.value), 9, _hoisted_19),\n                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(horas, (hora) => {\n                  return _createElementVNode(\"option\", {\n                    key: hora,\n                    value: hora\n                  }, _toDisplayString(hora), 9, _hoisted_20)\n                }), 64))\n              ], 512), [\n                [_vModelSelect, appointmentTime.value]\n              ]),\n              _hoisted_21\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_22, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[4] || (_cache[4] = ($event: any) => (handleSubmit(infoConsulta))),\n            class: \"bg-[#003366] text-white p-2 border rounded hover:bg-blue-900 active:bg-white active:text-[#003366] active:border-[#003366] active:border\"\n          }, \" Agendar consulta \"),\n          _createElementVNode(\"button\", {\n            onClick: _cache[5] || (_cache[5] = ($event: any) => (_ctx.$emit('close'))),\n            class: \"border border-[#003366] hover:bg-primary/10 text-[#003366] p-2 rounded active:bg-[#003366] active:text-white\"\n          }, \" Cancelar \")\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n    <div id=\"modal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n        <div class=\"bg-card p-5 rounded-lg w-full max-w-lg\">\r\n            <header class=\"flex items-center justify-center rounded p-4 bg-blue-900 text-white\">\r\n                <h1 class=\"text-lg font-semibold\">Editar</h1>\r\n            </header>\r\n            <main class=\"flex flex-col flex-1 space-y-6\">\r\n                <section>\r\n                    <h2 class=\"text-lg font-semibold text-[#003366] mt-5\">Participantes</h2>\r\n                    <div class=\"space-y-4\">\r\n                        <div class=\"space-y-2 form-group\">\r\n                            <select\r\n                                v-model=\"infoConsulta.nombrePaciente\"\r\n                                required\r\n                                id=\"patient-name\"\r\n                                class=\"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            >\r\n                                <option v-for=\"paciente in pacientes\" :key=\"paciente.id\" :value=\"paciente.nombre\">\r\n                                    {{ paciente.nombre }}\r\n                                </option>\r\n                            </select>\r\n                            <label for=\"patient-name\" class=\"block text-sm font-medium text-gray-700 form-label\">Nombre del paciente</label>\r\n                        </div>\r\n                        <div class=\"space-y-2 form-group\">\r\n                            <select\r\n                                v-model=\"infoConsulta.nombreMedico\"\r\n                                id=\"doctor-name\"\r\n                                class=\"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            >\r\n                                <option v-for=\"medico in medicos\" :key=\"medico.id\" :value=\"medico.nombre\">\r\n                                    {{ medico.nombre }}\r\n                                </option>\r\n                            </select>\r\n                            <label for=\"doctor-name\" class=\"block text-sm font-medium text-gray-700 form-label\">Nombre del médico</label>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <!-- Sección de fecha y horario -->\r\n                <section>\r\n                    <h2 class=\"text-lg font-semibold text-[#003366]\">Fecha y horario</h2>\r\n                    <div class=\"space-y-4\">\r\n                        <div>\r\n                            <div class=\"relative mt-0 form-group\">\r\n                                <input\r\n                                    v-model=\"infoConsulta.fecha\"\r\n                                    type=\"date\"\r\n                                    id=\"appointment-date\"\r\n                                    class=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                                    :class=\"{ 'border-red-500': v$.infoConsulta.fecha.$error }\"\r\n                                />\r\n                                <label for=\"appointment-date\" class=\"block text-sm font-medium text-gray-700 pl-3 form-label-date\"\r\n                                    >Fecha de la consulta</label\r\n                                >\r\n                                <span v-if=\"v$.infoConsulta.fecha.$error\" class=\"flex m-0 p-0 font-sans text-sm text-red-600\"\r\n                                    >Este campo es requerido</span\r\n                                >\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"space-y-2 form-group\">\r\n                            <select\r\n                                v-model=\"appointmentTime\"\r\n                                id=\"appointment-time\"\r\n                                class=\"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\r\n                            >\r\n                                <option :value=\"appointmentTime\">{{ appointmentTime }}</option>\r\n                                <option v-for=\"hora in horas\" :key=\"hora\" :value=\"hora\">\r\n                                    {{ hora }}\r\n                                </option>\r\n                            </select>\r\n                            <label for=\"appointment-time\" class=\"block text-sm font-medium text-gray-700 form-label\"\r\n                                >Horario de la consulta</label\r\n                            >\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <!-- Botones de acción -->\r\n                <div class=\"flex flex-col space-y-4\">\r\n                    <button\r\n                        @click=\"handleSubmit(infoConsulta)\"\r\n                        class=\"bg-[#003366] text-white p-2 border rounded hover:bg-blue-900 active:bg-white active:text-[#003366] active:border-[#003366] active:border\"\r\n                    >\r\n                        Agendar consulta\r\n                    </button>\r\n                    <button\r\n                        @click=\"$emit('close')\"\r\n                        class=\"border border-[#003366] hover:bg-primary/10 text-[#003366] p-2 rounded active:bg-[#003366] active:text-white\"\r\n                    >\r\n                        Cancelar\r\n                    </button>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { reactive, defineProps, defineEmits, ref, onMounted, computed, watch } from 'vue';\r\nimport { Consulta } from '../../login/interfaces/Consulta';\r\nimport ConsultaService from '../../login/helper/ConsultaService';\r\nimport { Medico } from '../../login/interfaces/Medico';\r\nimport { Paciente } from '../../login/interfaces/Paciente';\r\nimport { format } from 'date-fns';\r\nimport { fromZonedTime } from 'date-fns-tz';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport useVuelidate from '@vuelidate/core';\r\nimport { required } from '@vuelidate/validators';\r\n\r\nconst props = defineProps<{\r\n    consulta: Consulta;\r\n    medicos: Medico[];\r\n    pacientes: Paciente[];\r\n}>();\r\n\r\nconst infoConsulta = reactive<Consulta>({ ...props.consulta });\r\nconst appointmentTime = ref('');\r\nconst horas = ['07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00'];\r\n\r\n// Al montar el componente, separamos la fecha y la hora\r\nonMounted(() => {\r\n    if (infoConsulta.fecha) {\r\n        const date = new Date(infoConsulta.fecha);\r\n        infoConsulta.fecha = format(date, 'yyyy-MM-dd');\r\n        appointmentTime.value = format(date, 'HH:mm');\r\n    }\r\n});\r\nconst rules = {\r\n    infoConsulta: {\r\n        fecha: { required },\r\n    },\r\n};\r\nconst v$ = useVuelidate(rules, { infoConsulta });\r\n\r\n// onMounted(() => {\r\n//     if (!infoConsulta.fecha) {\r\n//         infoConsulta.fecha = new Date().toISOString(); // O usa null si prefieres\r\n//     }\r\n//     // Extraer la hora de la fecha\r\n//     const date = new Date(infoConsulta.fecha);\r\n//     if (!isNaN(date.getTime())) {\r\n//         appointmentTime.value = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n//     } else {\r\n//         console.error('Invalid date value in onMounted:', infoConsulta.fecha);\r\n//     }\r\n// });\r\n\r\nconst emit = defineEmits(['consultaEdited', 'close']);\r\n\r\nasync function handleSubmit(consulta: Consulta) {\r\n    const isValid = await v$.value.$validate();\r\n    if (!isValid) {\r\n        // Formulario no válido, muestra errores\r\n        return;\r\n    }\r\n    if (consulta.fecha && appointmentTime.value) {\r\n        try {\r\n            // Combinar fecha y hora en el formato correcto\r\n            const dateTime = new Date(`${consulta.fecha}T${appointmentTime.value}:00`);\r\n            const utcDateTime = fromZonedTime(dateTime, 'America/Mexico_City'); // Ajusta la zona horaria según tu ubicación\r\n            consulta.fecha = format(utcDateTime, \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\r\n            // if (!infoConsulta.fecha || isNaN(new Date(infoConsulta.fecha).getTime())) {\r\n            //     console.error('Fecha no válida:', infoConsulta.fecha);\r\n            //     return;\r\n            // }\r\n\r\n            const response = await ConsultaService.editConsulta(consulta);\r\n\r\n            if (response.status == 200) {\r\n                Swal.fire({\r\n                    title: 'Edicion exitoso!',\r\n                    text: 'Se ha actualizado la Informacion',\r\n                    icon: 'success',\r\n                    confirmButtonText: 'Ok',\r\n                });\r\n            }\r\n            const editConsulta: Consulta = response.data.body;\r\n            emit('consultaEdited', editConsulta);\r\n            emit('close');\r\n        } catch (e) {\r\n            console.error('error', e);\r\n            if (axios.isAxiosError(e)) {\r\n                if (!e.response) {\r\n                    Swal.fire({\r\n                        title: 'Error!',\r\n                        text: 'Ha ocurrido un error desconocido',\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Ok',\r\n                    });\r\n                } else if (e.response.status === 409) {\r\n                    Swal.fire({\r\n                        title: 'Error!',\r\n                        text: e.response?.data[0].error,\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Ok',\r\n                    });\r\n                } else if (e.response.status === 400) {\r\n                    Swal.fire({\r\n                        title: 'Error!',\r\n                        text: e.response?.data,\r\n                        icon: 'error',\r\n                        confirmButtonText: 'Ok',\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// const formattedDate = computed({\r\n//     get: () => {\r\n//         const date = new Date(infoConsulta.fecha);\r\n//         if (isNaN(date.getTime())) {\r\n//             return ''; // Retorna una cadena vacía si la fecha no es válida\r\n//         }\r\n//         return date.toISOString().split('T')[0];\r\n//     },\r\n//     set: (newValue: string) => {\r\n//         if (newValue === '') {\r\n//             infoConsulta.fecha == null; // O establece un valor por defecto\r\n//             return;\r\n//         }\r\n//         const [year, month, day] = newValue.split('-');\r\n//         const oldDate = new Date(infoConsulta.fecha || new Date()); // Usa la fecha actual si es null\r\n//         const newDate = new Date(Number(year), Number(month) - 1, Number(day), oldDate.getHours(), oldDate.getMinutes());\r\n//         infoConsulta.fecha = newDate.toISOString();\r\n//     },\r\n// });\r\n</script>\r\n\r\n<style scoped>\r\n.form-input:focus + .form-label,\r\n.form-input:not(:placeholder-shown) + .form-label {\r\n    transform: translateY(-12px) scale(0.7);\r\n    transform-origin: left top;\r\n    color: hsl(var(--muted-foreground));\r\n}\r\n\r\n.form-label {\r\n    position: absolute;\r\n    top: 15px;\r\n    left: 15px;\r\n    transition:\r\n        transform 0.5s,\r\n        color 0.3s;\r\n}\r\n\r\n.form-label-date {\r\n    position: absolute;\r\n    top: -2px;\r\n    left: 2px;\r\n    font-size: 60%;\r\n    color: hsl(var(--muted-foreground));\r\n}\r\n\r\n.form-group {\r\n    position: relative;\r\n    display: grid;\r\n    /* gap: 20px;*/\r\n}\r\n\r\n.form-group select:focus-within + .form-label,\r\n.form-group select:valid + .form-label {\r\n    transform: translateY(-120%) scale(0.7);\r\n\r\n    transform-origin: left top;\r\n    color: hsl(var(--muted-foreground));\r\n}\r\n</style>\r\n<!-- // const updateConsulta = () => {\r\n//     // Combinar la fecha y la hora\r\n//     const [year, month, day] = infoConsulta.fecha.split('-');\r\n//     const [hour, minute] = appointmentTime.value.split(':');\r\n//     const updatedDate = new Date(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute));\r\n\r\n//     const updatedConsulta = {\r\n//         ...infoConsulta,\r\n//         fecha: updatedDate.toISOString(),\r\n//     };\r\n\r\n//     emit('consultaEdited', updatedConsulta);\r\n//     emit('close');\r\n// }; -->\r\n","import script from \"./EditConsultaModal.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EditConsultaModal.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./EditConsultaModal.vue?vue&type=style&index=0&id=5d21bcf7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5d21bcf7\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"min-h-screen bg-gray-100\" }\nconst _hoisted_2 = { class: \"min-h-screen bg-gray-100 p-4\" }\nconst _hoisted_3 = { class: \"bg-white shadow\" }\nconst _hoisted_4 = { class: \"flex items-center p-4 bg-[#072b52] text-white\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"w-5 h-5\",\n  fill: \"none\",\n  stroke: \"white\",\n  viewBox: \"0 0 24 24\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"stroke-width\": \"2\",\n    d: \"M15 19l-7-7 7-7\"\n  })\n], -1)\nconst _hoisted_6 = [\n  _hoisted_5\n]\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"flex-grow text-center font-bold\" }, \"Consultas\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  class: \"w-5 h-5\",\n  fill: \"currentColor\",\n  viewBox: \"0 0 20 20\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M6 10a2 2 0 114 0 2 2 0 11-4 0zM10 2a2 2 0 110 4 2 2 0 010-4zM10 14a2 2 0 110 4 2 2 0 010-4z\" })\n], -1)\nconst _hoisted_9 = [\n  _hoisted_8\n]\nconst _hoisted_10 = { class: \"grid items-center space-x-2 mb-4 gap-2\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_13 = { class: \"relative mb-4\" }\nconst _hoisted_14 = { class: \"flex items-center justify-between\" }\nconst _hoisted_15 = { class: \"text-lg font-semibold text-[#0077B6]\" }\nconst _hoisted_16 = [\"onClick\"]\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"m6 9 6 6 6-6\" }, null, -1)\nconst _hoisted_18 = [\n  _hoisted_17\n]\nconst _hoisted_19 = {\n  key: 0,\n  class: \"mt-2 space-y-2\"\n}\nconst _hoisted_20 = [\"onClick\"]\nconst _hoisted_21 = { class: \"text-gray-900\" }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"path\", { d: \"m6 9 6 6 6-6\" }, null, -1)\nconst _hoisted_23 = [\n  _hoisted_22\n]\nconst _hoisted_24 = {\n  key: 0,\n  class: \"mt-2 p-2 bg-white\"\n}\nconst _hoisted_25 = { class: \"text-sm\" }\nconst _hoisted_26 = { class: \"text-xs text-muted-foreground\" }\nconst _hoisted_27 = { class: \"text-sm\" }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"text-xs text-muted-foreground\" }, \"Paciente\", -1)\nconst _hoisted_29 = { class: \"items-center inline-flex gap-2 mt-2\" }\nconst _hoisted_30 = [\"onClick\"]\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  class: \"h-4 w-4\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v10\" }),\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M14 2v4a2 2 0 0 0 2 2h4\" }),\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M10.4 12.6a2 2 0 1 1 3 3L8 21l-4 1 1-4Z\" })\n], -1)\nconst _hoisted_32 = [\"onClick\"]\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"24\",\n  height: \"24\",\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  class: \"h-4 w-4\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M3 6h18\" }),\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\" }),\n  /*#__PURE__*/_createElementVNode(\"path\", { d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\" })\n], -1)\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1)\nconst _hoisted_37 = { class: \"bottom-0 w-full bg-white p-4 sticky\" }\n\nimport homeService from '@/components/page/login/helper/homeService';\r\nimport { Consulta } from '@/components/page/login/interfaces/Consulta';\r\nimport CancelarConsultaModal from '@/components/page/home/consultas/CancelarConsultaModal.vue';\r\nimport router from '@/router';\r\nimport { computed, nextTick, onMounted, reactive, ref } from 'vue';\r\nimport EditConsultaModal from '@/components/page/home/consultas/EditConsultaModal.vue';\r\nimport RegisterConsultaModal from '@/components/page/home/consultas/RegisterConsultaModal.vue';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ConsultasView',\n  setup(__props) {\n\r\nconst menuOpen = ref(false);\r\nconst consultas = reactive<Consulta[]>([]);\r\n\r\n// const consultas = ref<Consulta[]>([]);\r\nconst isVisibleDateContent = ref<{ [key: string]: boolean }>({});\r\nconst isVisibleTimeContent = ref<{ [key: string]: boolean }>({});\r\nconst searchTerm = ref('');\r\nconst medicos = ref([]);\r\nconst pacientes = ref([]);\r\n\r\nconst toggleMenu = () => {\r\n    menuOpen.value = !menuOpen.value;\r\n};\r\nconst toggleDateContent = (date: string) => {\r\n    isVisibleDateContent.value[date] = !isVisibleDateContent.value[date];\r\n};\r\nconst modalValue = ref(false);\r\nconst modalValue2 = ref(false);\r\n\r\nfunction showModal2() {\r\n    modalValue2.value = true;\r\n}\r\nfunction hideModal() {\r\n    modalValue.value = false;\r\n}\r\nfunction hideModal2() {\r\n    modalValue2.value = false;\r\n}\r\n\r\nfunction onConsultaEdited(newInfo: Consulta) {\r\n    console.log('Nuevo Info:', newInfo);\r\n    console.log('fecha actualizada: ', newInfo.fecha);\r\n    const index = consultas.findIndex((m) => m.id === newInfo.id);\r\n    if (index !== -1) {\r\n        consultas[index] = newInfo;\r\n        // Ordena las consultas por fecha\r\n        consultas.sort((a, b) => new Date(a.fecha).getTime() - new Date(b.fecha).getTime());\r\n\r\n        consultas.forEach((consulta) => {\r\n            const date = new Date(consulta.fecha).toLocaleDateString();\r\n            isVisibleDateContent.value[date] = true;\r\n            isVisibleTimeContent.value[consulta.id] = false;\r\n        });\r\n    }\r\n}\r\nconst toggleTimeContent = (id: number) => {\r\n    isVisibleTimeContent.value[id] = !isVisibleTimeContent.value[id];\r\n};\r\n\r\nfunction onConsultaCancelled(consulta: Consulta) {\r\n    const index = consultas.findIndex((c) => c.id === consulta.id);\r\n    if (index !== -1) {\r\n        consultas.splice(index, 1);\r\n    }\r\n}\r\nconst selectedConsulta = ref<Consulta | null>(null);\r\n\r\nfunction showModal(consulta: Consulta) {\r\n    selectedConsulta.value = { ...consulta }; // Crea una copia\r\n    modalValue.value = true;\r\n}\r\nfunction OpenModal(consulta: Consulta) {\r\n    selectedConsulta.value = { ...consulta };\r\n    isModalOpen.value = true;\r\n}\r\n\r\nconst filteredConsultasPorFecha = computed(() => {\r\n    const grupos: { [key: string]: Consulta[] } = {};\r\n\r\n    // Filtrar las consultas\r\n    const filteredConsultas = searchTerm.value\r\n        ? consultas.filter((consulta) => {\r\n              const consultaDate = new Date(consulta.fecha).toISOString().split('T')[0];\r\n              return consultaDate === searchTerm.value;\r\n          })\r\n        : consultas;\r\n\r\n    // Agrupar las consultas filtradas por fecha\r\n    filteredConsultas.forEach((consulta) => {\r\n        const fecha = new Date(consulta.fecha).toLocaleDateString();\r\n        if (!grupos[fecha]) {\r\n            grupos[fecha] = [];\r\n        }\r\n        grupos[fecha].push(consulta);\r\n    });\r\n\r\n    return grupos;\r\n});\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const response = await homeService.getConsultasBoard();\r\n        consultas.push(...response.data.content);\r\n        consultas.forEach((consulta) => {\r\n            const date = new Date(consulta.fecha).toLocaleDateString();\r\n            isVisibleDateContent.value[date] = true;\r\n            isVisibleTimeContent.value[consulta.id] = false;\r\n        });\r\n    } catch (error) {\r\n        console.error('Error loading consultas:', error);\r\n    }\r\n});\r\n\r\nconst onConsultaCreated = (newConsulta: Consulta) => {\r\n    console.log('consulta recibida: ', newConsulta);\r\n    consultas.push(newConsulta);\r\n\r\n    // Ordena las consultas por fecha\r\n    consultas.sort((a, b) => new Date(a.fecha).getTime() - new Date(b.fecha).getTime());\r\n\r\n    consultas.forEach((consulta) => {\r\n        const date = new Date(consulta.fecha).toLocaleDateString();\r\n        isVisibleDateContent.value[date] = true;\r\n        isVisibleTimeContent.value[consulta.id] = false;\r\n    });\r\n};\r\nfunction regresar() {\r\n    router.push({ name: 'home' });\r\n}\r\n\r\nconst isModalOpen = ref(false);\r\n\r\nconst closeModal = () => {\r\n    isModalOpen.value = false;\r\n};\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const responseMedicos = await homeService.getMedicosBoard();\r\n        medicos.value = responseMedicos.data.content;\r\n\r\n        const responsePacientes = await homeService.getPacientesBoard();\r\n        pacientes.value = responsePacientes.data.content;\r\n    } catch (error) {\r\n        console.error('Error loading data:', error);\r\n    }\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"button\", {\n              onClick: regresar,\n              class: \"flex items-center space-x-1\"\n            }, _hoisted_6),\n            _hoisted_7,\n            _createElementVNode(\"button\", {\n              onClick: toggleMenu,\n              type: \"button\"\n            }, _hoisted_9),\n            (menuOpen.value)\n              ? (_openBlock(), _createElementBlock(\"div\", {\n                  key: 0,\n                  class: _normalizeClass([['absolute', 'top-16', 'right-10', ' bg-white', 'shadow-md', 'md:block', 'border'], \"flex flex-col p-4 sm:block rounded-md z-10\"])\n                }, [\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    _createVNode(_component_router_link, {\n                      to: \"/medicos\",\n                      class: \"text-[#072b52] font-serif\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Medicos\")\n                      ]),\n                      _: 1\n                    }),\n                    _hoisted_11,\n                    _createVNode(_component_router_link, {\n                      to: \"/pacientes\",\n                      class: \"text-[#072b52] font-serif\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Pacientes\")\n                      ]),\n                      _: 1\n                    }),\n                    _hoisted_12,\n                    _createVNode(_component_router_link, {\n                      to: \"/consultas\",\n                      class: \"text-[#072b52] font-serif\"\n                    }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(\"Consultas\")\n                      ]),\n                      _: 1\n                    })\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"div\", _hoisted_13, [\n            _withDirectives(_createElementVNode(\"input\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchTerm).value = $event)),\n              type: \"date\",\n              class: \"w-full p-2 pl-10 border rounded-lg\",\n              placeholder: \"Buscar por fecha\"\n            }, null, 512), [\n              [_vModelText, searchTerm.value]\n            ])\n          ]),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredConsultasPorFecha.value, (consultasPorFecha, fecha) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: fecha,\n              class: \"p-4\"\n            }, [\n              _createElementVNode(\"div\", _hoisted_14, [\n                _createElementVNode(\"span\", _hoisted_15, _toDisplayString(fecha), 1),\n                _createElementVNode(\"button\", {\n                  onClick: ($event: any) => (toggleDateContent(fecha as string))\n                }, [\n                  (_openBlock(), _createElementBlock(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"24\",\n                    height: \"24\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    \"stroke-width\": \"2\",\n                    \"stroke-linecap\": \"round\",\n                    \"stroke-linejoin\": \"round\",\n                    class: _normalizeClass([\"h-4 w-4 text-[#0077B6]\", { 'rotate-180': isVisibleDateContent.value[fecha] }])\n                  }, _hoisted_18, 2))\n                ], 8, _hoisted_16)\n              ]),\n              (isVisibleDateContent.value[fecha])\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(consultasPorFecha, (consulta) => {\n                      return (_openBlock(), _createElementBlock(\"details\", {\n                        key: consulta.id\n                      }, [\n                        _createElementVNode(\"summary\", {\n                          onClick: ($event: any) => (toggleTimeContent(consulta.id)),\n                          class: \"flex items-center justify-between cursor-pointer bg-gray-100 p-2 rounded\"\n                        }, [\n                          _createElementVNode(\"span\", _hoisted_21, _toDisplayString(new Date(consulta.fecha).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })), 1),\n                          (_openBlock(), _createElementBlock(\"svg\", {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            width: \"24\",\n                            height: \"24\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            \"stroke-width\": \"2\",\n                            \"stroke-linecap\": \"round\",\n                            \"stroke-linejoin\": \"round\",\n                            class: _normalizeClass([\"h-4 w-4 text-[#0077B6]\", { 'rotate-180': isVisibleTimeContent.value[consulta.id] }])\n                          }, _hoisted_23, 2))\n                        ], 8, _hoisted_20),\n                        (isVisibleTimeContent.value[consulta.id])\n                          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n                              _createElementVNode(\"p\", _hoisted_25, _toDisplayString(consulta.nombreMedico), 1),\n                              _createElementVNode(\"p\", _hoisted_26, _toDisplayString(consulta.especialidadMedico) + \" | Documento \" + _toDisplayString(consulta.documentoMedico), 1),\n                              _createElementVNode(\"p\", _hoisted_27, _toDisplayString(consulta.nombrePaciente), 1),\n                              _hoisted_28,\n                              _createElementVNode(\"div\", _hoisted_29, [\n                                _createElementVNode(\"button\", {\n                                  onClick: _withModifiers(($event: any) => (showModal(consulta)), [\"prevent\"]),\n                                  class: \"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3\"\n                                }, [\n                                  _hoisted_31,\n                                  _createTextVNode(\" Editar \")\n                                ], 8, _hoisted_30),\n                                _createElementVNode(\"button\", {\n                                  onClick: ($event: any) => (OpenModal(consulta)),\n                                  class: \"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3 text-red-500\"\n                                }, [\n                                  _hoisted_33,\n                                  _createTextVNode(\" Cancelar Consulta \")\n                                ], 8, _hoisted_32)\n                              ])\n                            ]))\n                          : _createCommentVNode(\"\", true)\n                      ]))\n                    }), 128)),\n                    _hoisted_34\n                  ]))\n                : _createCommentVNode(\"\", true),\n              _hoisted_35\n            ]))\n          }), 128)),\n          _hoisted_36\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_37, [\n      _createElementVNode(\"button\", {\n        onClick: _withModifiers(showModal2, [\"prevent\"]),\n        class: \"block w-full border-2 bg-[#072b52] hover:bg-[#173657] text-white p-3 rounded-lg active:text-[#173657] active:border-[#173657] active:bg-white active:border-2\"\n      }, \" Agendar nueva Consulta \")\n    ]),\n    (modalValue2.value)\n      ? (_openBlock(), _createBlock(RegisterConsultaModal, {\n          key: 0,\n          onClose: hideModal2,\n          medicos: medicos.value,\n          pacientes: pacientes.value,\n          onConsultaCreated: onConsultaCreated\n        }, null, 8, [\"medicos\", \"pacientes\"]))\n      : _createCommentVNode(\"\", true),\n    (modalValue.value && selectedConsulta.value)\n      ? (_openBlock(), _createBlock(EditConsultaModal, {\n          key: 1,\n          consulta: selectedConsulta.value,\n          medicos: medicos.value,\n          pacientes: pacientes.value,\n          onClose: hideModal,\n          onConsultaEdited: onConsultaEdited\n        }, null, 8, [\"consulta\", \"medicos\", \"pacientes\"]))\n      : _createCommentVNode(\"\", true),\n    (isModalOpen.value && selectedConsulta.value)\n      ? (_openBlock(), _createBlock(CancelarConsultaModal, {\n          key: 2,\n          consulta: selectedConsulta.value,\n          onClose: closeModal,\n          onConsultaCancelled: onConsultaCancelled\n        }, null, 8, [\"consulta\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n    <div class=\"min-h-screen bg-gray-100\">\r\n        <div class=\"min-h-screen bg-gray-100 p-4\">\r\n            <div class=\"bg-white shadow\">\r\n                <div class=\"flex items-center p-4 bg-[#072b52] text-white\">\r\n                    <button @click=\"regresar\" class=\"flex items-center space-x-1\">\r\n                        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"white\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\r\n                        </svg>\r\n                    </button>\r\n                    <h1 class=\"flex-grow text-center font-bold\">Consultas</h1>\r\n                    <button @click=\"toggleMenu\" type=\"button\">\r\n                        <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M6 10a2 2 0 114 0 2 2 0 11-4 0zM10 2a2 2 0 110 4 2 2 0 010-4zM10 14a2 2 0 110 4 2 2 0 010-4z\" />\r\n                        </svg>\r\n                    </button>\r\n                    <div\r\n                        v-if=\"menuOpen\"\r\n                        :class=\"['absolute', 'top-16', 'right-10', ' bg-white', 'shadow-md', 'md:block', 'border']\"\r\n                        class=\"flex flex-col p-4 sm:block rounded-md z-10\"\r\n                    >\r\n                        <div class=\"grid items-center space-x-2 mb-4 gap-2\">\r\n                            <router-link to=\"/medicos\" class=\"text-[#072b52] font-serif\">Medicos</router-link>\r\n                            <hr />\r\n                            <router-link to=\"/pacientes\" class=\"text-[#072b52] font-serif\">Pacientes</router-link>\r\n                            <hr />\r\n                            <router-link to=\"/consultas\" class=\"text-[#072b52] font-serif\">Consultas</router-link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"relative mb-4\">\r\n                    <input v-model=\"searchTerm\" type=\"date\" class=\"w-full p-2 pl-10 border rounded-lg\" placeholder=\"Buscar por fecha\" />\r\n                </div>\r\n\r\n                <div v-for=\"(consultasPorFecha, fecha) in filteredConsultasPorFecha\" :key=\"fecha\" class=\"p-4\">\r\n                    <div class=\"flex items-center justify-between\">\r\n                        <span class=\"text-lg font-semibold text-[#0077B6]\">{{ fecha }}</span>\r\n                        <button @click=\"toggleDateContent(fecha as string)\">\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"24\"\r\n                                height=\"24\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                stroke-width=\"2\"\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                class=\"h-4 w-4 text-[#0077B6]\"\r\n                                :class=\"{ 'rotate-180': isVisibleDateContent[fecha] }\"\r\n                            >\r\n                                <path d=\"m6 9 6 6 6-6\"></path>\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div v-if=\"isVisibleDateContent[fecha]\" class=\"mt-2 space-y-2\">\r\n                        <details v-for=\"consulta in consultasPorFecha\" :key=\"consulta.id\">\r\n                            <summary\r\n                                @click=\"toggleTimeContent(consulta.id)\"\r\n                                class=\"flex items-center justify-between cursor-pointer bg-gray-100 p-2 rounded\"\r\n                            >\r\n                                <span class=\"text-gray-900\">{{\r\n                                    new Date(consulta.fecha).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n                                }}</span>\r\n\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"24\"\r\n                                    height=\"24\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                    stroke-width=\"2\"\r\n                                    stroke-linecap=\"round\"\r\n                                    stroke-linejoin=\"round\"\r\n                                    class=\"h-4 w-4 text-[#0077B6]\"\r\n                                    :class=\"{ 'rotate-180': isVisibleTimeContent[consulta.id] }\"\r\n                                >\r\n                                    <path d=\"m6 9 6 6 6-6\"></path>\r\n                                </svg>\r\n                            </summary>\r\n\r\n                            <div v-if=\"isVisibleTimeContent[consulta.id]\" class=\"mt-2 p-2 bg-white\">\r\n                                <p class=\"text-sm\">{{ consulta.nombreMedico }}</p>\r\n                                <p class=\"text-xs text-muted-foreground\">\r\n                                    {{ consulta.especialidadMedico }} | Documento {{ consulta.documentoMedico }}\r\n                                </p>\r\n                                <p class=\"text-sm\">{{ consulta.nombrePaciente }}</p>\r\n                                <p class=\"text-xs text-muted-foreground\">Paciente</p>\r\n\r\n                                <div class=\"items-center inline-flex gap-2 mt-2\">\r\n                                    <button\r\n                                        @click.prevent=\"showModal(consulta)\"\r\n                                        class=\"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3\"\r\n                                    >\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"24\"\r\n                                            height=\"24\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"h-4 w-4\"\r\n                                        >\r\n                                            <path d=\"M12 22h6a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v10\"></path>\r\n                                            <path d=\"M14 2v4a2 2 0 0 0 2 2h4\"></path>\r\n                                            <path d=\"M10.4 12.6a2 2 0 1 1 3 3L8 21l-4 1 1-4Z\"></path>\r\n                                        </svg>\r\n                                        Editar\r\n                                    </button>\r\n                                    <button\r\n                                        @click=\"OpenModal(consulta)\"\r\n                                        class=\"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 rounded-md px-3 text-red-500\"\r\n                                    >\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"24\"\r\n                                            height=\"24\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"currentColor\"\r\n                                            stroke-width=\"2\"\r\n                                            stroke-linecap=\"round\"\r\n                                            stroke-linejoin=\"round\"\r\n                                            class=\"h-4 w-4\"\r\n                                        >\r\n                                            <path d=\"M3 6h18\"></path>\r\n                                            <path d=\"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\"></path>\r\n                                            <path d=\"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\"></path>\r\n                                        </svg>\r\n                                        Cancelar Consulta\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </details>\r\n                        <hr />\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"bottom-0 w-full bg-white p-4 sticky\">\r\n        <button\r\n            @click.prevent=\"showModal2\"\r\n            class=\"block w-full border-2 bg-[#072b52] hover:bg-[#173657] text-white p-3 rounded-lg active:text-[#173657] active:border-[#173657] active:bg-white active:border-2\"\r\n        >\r\n            Agendar nueva Consulta\r\n        </button>\r\n    </div>\r\n    <RegisterConsultaModal\r\n        v-if=\"modalValue2\"\r\n        @close=\"hideModal2\"\r\n        :medicos=\"medicos\"\r\n        :pacientes=\"pacientes\"\r\n        @consultaCreated=\"onConsultaCreated\"\r\n    />\r\n    <EditConsultaModal\r\n        v-if=\"modalValue && selectedConsulta\"\r\n        :consulta=\"selectedConsulta\"\r\n        :medicos=\"medicos\"\r\n        :pacientes=\"pacientes\"\r\n        @close=\"hideModal\"\r\n        @consultaEdited=\"onConsultaEdited\"\r\n    />\r\n\r\n    <CancelarConsultaModal\r\n        v-if=\"isModalOpen && selectedConsulta\"\r\n        :consulta=\"selectedConsulta\"\r\n        @close=\"closeModal\"\r\n        @consultaCancelled=\"onConsultaCancelled\"\r\n    />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport homeService from '@/components/page/login/helper/homeService';\r\nimport { Consulta } from '@/components/page/login/interfaces/Consulta';\r\nimport CancelarConsultaModal from '@/components/page/home/consultas/CancelarConsultaModal.vue';\r\nimport router from '@/router';\r\nimport { computed, nextTick, onMounted, reactive, ref } from 'vue';\r\nimport EditConsultaModal from '@/components/page/home/consultas/EditConsultaModal.vue';\r\nimport RegisterConsultaModal from '@/components/page/home/consultas/RegisterConsultaModal.vue';\r\n\r\nconst menuOpen = ref(false);\r\nconst consultas = reactive<Consulta[]>([]);\r\n\r\n// const consultas = ref<Consulta[]>([]);\r\nconst isVisibleDateContent = ref<{ [key: string]: boolean }>({});\r\nconst isVisibleTimeContent = ref<{ [key: string]: boolean }>({});\r\nconst searchTerm = ref('');\r\nconst medicos = ref([]);\r\nconst pacientes = ref([]);\r\n\r\nconst toggleMenu = () => {\r\n    menuOpen.value = !menuOpen.value;\r\n};\r\nconst toggleDateContent = (date: string) => {\r\n    isVisibleDateContent.value[date] = !isVisibleDateContent.value[date];\r\n};\r\nconst modalValue = ref(false);\r\nconst modalValue2 = ref(false);\r\n\r\nfunction showModal2() {\r\n    modalValue2.value = true;\r\n}\r\nfunction hideModal() {\r\n    modalValue.value = false;\r\n}\r\nfunction hideModal2() {\r\n    modalValue2.value = false;\r\n}\r\n\r\nfunction onConsultaEdited(newInfo: Consulta) {\r\n    console.log('Nuevo Info:', newInfo);\r\n    console.log('fecha actualizada: ', newInfo.fecha);\r\n    const index = consultas.findIndex((m) => m.id === newInfo.id);\r\n    if (index !== -1) {\r\n        consultas[index] = newInfo;\r\n        // Ordena las consultas por fecha\r\n        consultas.sort((a, b) => new Date(a.fecha).getTime() - new Date(b.fecha).getTime());\r\n\r\n        consultas.forEach((consulta) => {\r\n            const date = new Date(consulta.fecha).toLocaleDateString();\r\n            isVisibleDateContent.value[date] = true;\r\n            isVisibleTimeContent.value[consulta.id] = false;\r\n        });\r\n    }\r\n}\r\nconst toggleTimeContent = (id: number) => {\r\n    isVisibleTimeContent.value[id] = !isVisibleTimeContent.value[id];\r\n};\r\n\r\nfunction onConsultaCancelled(consulta: Consulta) {\r\n    const index = consultas.findIndex((c) => c.id === consulta.id);\r\n    if (index !== -1) {\r\n        consultas.splice(index, 1);\r\n    }\r\n}\r\nconst selectedConsulta = ref<Consulta | null>(null);\r\n\r\nfunction showModal(consulta: Consulta) {\r\n    selectedConsulta.value = { ...consulta }; // Crea una copia\r\n    modalValue.value = true;\r\n}\r\nfunction OpenModal(consulta: Consulta) {\r\n    selectedConsulta.value = { ...consulta };\r\n    isModalOpen.value = true;\r\n}\r\n\r\nconst filteredConsultasPorFecha = computed(() => {\r\n    const grupos: { [key: string]: Consulta[] } = {};\r\n\r\n    // Filtrar las consultas\r\n    const filteredConsultas = searchTerm.value\r\n        ? consultas.filter((consulta) => {\r\n              const consultaDate = new Date(consulta.fecha).toISOString().split('T')[0];\r\n              return consultaDate === searchTerm.value;\r\n          })\r\n        : consultas;\r\n\r\n    // Agrupar las consultas filtradas por fecha\r\n    filteredConsultas.forEach((consulta) => {\r\n        const fecha = new Date(consulta.fecha).toLocaleDateString();\r\n        if (!grupos[fecha]) {\r\n            grupos[fecha] = [];\r\n        }\r\n        grupos[fecha].push(consulta);\r\n    });\r\n\r\n    return grupos;\r\n});\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const response = await homeService.getConsultasBoard();\r\n        consultas.push(...response.data.content);\r\n        consultas.forEach((consulta) => {\r\n            const date = new Date(consulta.fecha).toLocaleDateString();\r\n            isVisibleDateContent.value[date] = true;\r\n            isVisibleTimeContent.value[consulta.id] = false;\r\n        });\r\n    } catch (error) {\r\n        console.error('Error loading consultas:', error);\r\n    }\r\n});\r\n\r\nconst onConsultaCreated = (newConsulta: Consulta) => {\r\n    console.log('consulta recibida: ', newConsulta);\r\n    consultas.push(newConsulta);\r\n\r\n    // Ordena las consultas por fecha\r\n    consultas.sort((a, b) => new Date(a.fecha).getTime() - new Date(b.fecha).getTime());\r\n\r\n    consultas.forEach((consulta) => {\r\n        const date = new Date(consulta.fecha).toLocaleDateString();\r\n        isVisibleDateContent.value[date] = true;\r\n        isVisibleTimeContent.value[consulta.id] = false;\r\n    });\r\n};\r\nfunction regresar() {\r\n    router.push({ name: 'home' });\r\n}\r\n\r\nconst isModalOpen = ref(false);\r\n\r\nconst closeModal = () => {\r\n    isModalOpen.value = false;\r\n};\r\n\r\nonMounted(async () => {\r\n    try {\r\n        const responseMedicos = await homeService.getMedicosBoard();\r\n        medicos.value = responseMedicos.data.content;\r\n\r\n        const responsePacientes = await homeService.getPacientesBoard();\r\n        pacientes.value = responsePacientes.data.content;\r\n    } catch (error) {\r\n        console.error('Error loading data:', error);\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n<!-- //const fetchPacientes = async () => {\r\n//     const response = await homeService.getConsultasBoard();\r\n//     consultas.push(...response.data.content);\r\n// };\r\n// onMounted(fetchPacientes); -->\r\n<!-- ////////////////////////// -->\r\n<!-- // // Asegúrate de que la fecha es válida\r\n    // const fecha = new Date(newConsulta.fecha);\r\n    // console.log('fecha: ', fecha);\r\n    // if (!isNaN(fecha.getTime())) {\r\n    //     newConsulta.fecha = fecha.toISOString(); // Normaliza el formato de fecha\r\n    //     consultas.push(newConsulta);\r\n\r\n    //     const date = fecha.toLocaleDateString();\r\n    //     isVisibleDateContent.value[date] = true;\r\n    //     isVisibleTimeContent.value[newConsulta.id] = false;\r\n\r\n    //     // Ordena las consultas por fecha\r\n    //     consultas.sort((a, b) => new Date(a.fecha).getTime() - new Date(b.fecha).getTime());\r\n    // } else {\r\n    //     console.error('Fecha inválida recibida:', newConsulta.fecha);\r\n    // }\r\n    // // Ordenar las consultas por fecha\r\n    // consultas.sort((a, b) => new Date(b.fecha).getTime() - new Date(a.fecha).getTime());\r\n    // // Actualizar la visibilidad de la nueva consulta\r\n    // const date = new Date(newConsulta.fecha).toLocaleDateString();\r\n    // isVisibleDateContent.value[date] = true;\r\n    // isVisibleTimeContent.value[newConsulta.id] = false; -->\r\n\r\n<!-- --------------------------- -->\r\n<!-- // const filteredConsultas = computed(() => {\r\n//     if (!searchTerm.value) return consultas;\r\n\r\n//     return consultas.filter((consulta) => {\r\n//         const consultaDate = new Date(consulta.fecha).toISOString().split('T')[0];\r\n//         return consultaDate === searchTerm.value;\r\n//     });\r\n// });\r\n// const consultasPorFecha = computed(() => {\r\n//     const grupos: { [key: string]: Consulta[] } = {};\r\n//     filteredConsultas.value.forEach((consulta) => {\r\n//         const fecha = new Date(consulta.fecha).toLocaleDateString();\r\n//         if (!grupos[fecha]) {\r\n//             grupos[fecha] = [];\r\n//         }\r\n//         grupos[fecha].push(consulta);\r\n//     });\r\n//     return grupos;\r\n// }); -->\r\n","import script from \"./ConsultasView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ConsultasView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["API_URL","get","headers","HomeService","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","value","disabled","selected","hidden","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","id","_hoisted_20","key","_hoisted_21","__name","props","consulta","emits","setup","__props","__emit","infoConsulta","motivo","rules","required","v$","hora","fecha","date","Date","format","emit","cancelar","$validate","isValid","ConsultaService","cancelarConsulta","response","console","log","data","icon","title","body","error","_ctx","_cache","nombreMedico","especialidadMedico","documentoMedico","nombrePaciente","$error","for","$event","onClick","$emit","__exports__","_hoisted_22","medicos","pacientes","appointmentTime","horas","handleSubmit","dateTime","utcDateTime","editConsulta","status","text","confirmButtonText","axios","isAxiosError","paciente","nombre","medico","type","fill","stroke","viewBox","xmlns","d","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","width","height","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","menuOpen","consultas","isVisibleDateContent","isVisibleTimeContent","searchTerm","toggleMenu","toggleDateContent","modalValue","modalValue2","showModal2","hideModal","hideModal2","onConsultaEdited","newInfo","index","findIndex","m","sort","a","b","getTime","forEach","toLocaleDateString","toggleTimeContent","onConsultaCancelled","c","splice","selectedConsulta","showModal","OpenModal","isModalOpen","filteredConsultasPorFecha","grupos","filteredConsultas","filter","consultaDate","toISOString","split","push","homeService","getConsultasBoard","content","onConsultaCreated","newConsulta","regresar","router","name","closeModal","getMedicosBoard","responseMedicos","getPacientesBoard","responsePacientes","_component_router_link","to","default","_","placeholder","consultasPorFecha","toLocaleTimeString","hour","minute","RegisterConsultaModal","onClose","EditConsultaModal","CancelarConsultaModal"],"sourceRoot":""}